import numpy as np
from scipy.optimize import curve_fit


# inputs = [
#     [0.014, 0.002],
#     [0.015, 0.002],
#     [0.016, 0.002],
#     [0.017, 0.002],
#     [0.018, 0.002],
#     [0.019, 0.002],
#     [0.020, 0.002],
#     [0.021, 0.002],
#     [0.022, 0.002],
#     [0.023, 0.002],
#     [0.024, 0.002],
#     [0.016, 0.000],
#     [0.016, 0.001],
#     [0.016, 0.002], 
#     [0.016, 0.003],
#     [0.016, 0.004],
#     [0.016, 0.005],
#     [0.016, 0.006],
#     [0.016, 0.007],
#     [0.016, 0.008],
#     [0.016, 0.009],
#     [0.016, 0.010],
#     ]
inputs = [
    [0.014, 0.015, 0.016, 0.017, 0.018, 0.019, 0.020, 0.021, 0.022, 0.023, 0.024, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016],
    [0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.000, 0.001, 0.002, 0.003, 0.004, 0.005, 0.006, 0.007, 0.008, 0.009, 0.010]
]


outputs = [
    1.218929442630704,
    0.7357758632191714,
    0.5953631710628399,
    0.8977576088329084,
    1.1795960244106485,
    1.8168530229005853,
    2.1532142603202837,
    2.7842211968599386,
    3.1195702601411,
    3.8543069715955385,
    4.340398434256527,
    1.6181109095712074,
    0.8224317497352037,
    0.6465251905160742,
    1.2688757109963882,
    1.947045332699018,
    2.8285100626277373,
    3.6184735919654325,
    4.3386988877291275,
    5.157400025994484,
    5.872000179694781,
    6.656471032447951,
    ]

varnames = ['m', 'h', 'n', 'j', 'k']
def f(x, m, h, n, j, k):
    return m*abs(x[0]-h) + n*abs(x[1]-j) + k

popt, pcov, infodict, mesg, ier = curve_fit(f, inputs, outputs, p0=[1500,0.016,577,0.002,0.5], full_output=True)
for i in range(len(popt)):
    print('{0} = {1:f}'.format(varnames[i], popt[i]))


print("Final Equation: z = {0}abs(x-{1}) + {2}abs(y-{3}) + {4}".format(popt[0], popt[1], popt[2], popt[3], popt[4]))
# print(pcov)
# print(infodict)
# print(mesg)
# print(ier)
